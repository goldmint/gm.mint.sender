// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.10.1
// source: mintsender_request.proto

package sender

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Send is a request to the service to send token to the specified wallet
type Send struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service           string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`                      // Service name (to differentiate multiple requestors): 1..64
	Id                string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                // Unique request ID (within service): 1..64
	PublicKey         string `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`                  // Destination wallet address in Base58
	Token             string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                          // GOLD or MNT
	Amount            string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`                        // Token amount in major units: 1.234 (18 decimal places)
	IgnoreApprovement bool   `protobuf:"varint,6,opt,name=ignoreApprovement,proto3" json:"ignoreApprovement,omitempty"` // Indicates wallet may not be approved (valid only if sender has 'emission' tag)
}

func (x *Send) Reset() {
	*x = Send{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mintsender_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send) ProtoMessage() {}

func (x *Send) ProtoReflect() protoreflect.Message {
	mi := &file_mintsender_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send.ProtoReflect.Descriptor instead.
func (*Send) Descriptor() ([]byte, []int) {
	return file_mintsender_request_proto_rawDescGZIP(), []int{0}
}

func (x *Send) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Send) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Send) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Send) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Send) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Send) GetIgnoreApprovement() bool {
	if x != nil {
		return x.IgnoreApprovement
	}
	return false
}

// SendReply is a reply for Send
type SendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Success is true in case of success
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error contains error descrition in case of failure
}

func (x *SendReply) Reset() {
	*x = SendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mintsender_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReply) ProtoMessage() {}

func (x *SendReply) ProtoReflect() protoreflect.Message {
	mi := &file_mintsender_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReply.ProtoReflect.Descriptor instead.
func (*SendReply) Descriptor() ([]byte, []int) {
	return file_mintsender_request_proto_rawDescGZIP(), []int{1}
}

func (x *SendReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Approve is a request to the service to approve specified wallet
type Approve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`     // Service name (to differentiate multiple requestors): 1..64
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`               // Unique request ID (within service): 1..64
	PublicKey string `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"` // Destination wallet address in Base58
}

func (x *Approve) Reset() {
	*x = Approve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mintsender_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Approve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Approve) ProtoMessage() {}

func (x *Approve) ProtoReflect() protoreflect.Message {
	mi := &file_mintsender_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Approve.ProtoReflect.Descriptor instead.
func (*Approve) Descriptor() ([]byte, []int) {
	return file_mintsender_request_proto_rawDescGZIP(), []int{2}
}

func (x *Approve) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Approve) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Approve) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// ApproveReply is a reply for Approve
type ApproveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Success is true in case of success
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error contains error descrition in case of failure
}

func (x *ApproveReply) Reset() {
	*x = ApproveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mintsender_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveReply) ProtoMessage() {}

func (x *ApproveReply) ProtoReflect() protoreflect.Message {
	mi := &file_mintsender_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveReply.ProtoReflect.Descriptor instead.
func (*ApproveReply) Descriptor() ([]byte, []int) {
	return file_mintsender_request_proto_rawDescGZIP(), []int{3}
}

func (x *ApproveReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ApproveReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_mintsender_request_proto protoreflect.FileDescriptor

var file_mintsender_request_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x69, 0x6e, 0x74, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x3b, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x51, 0x0a,
	0x07, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x3e, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x26, 0x5a, 0x08, 0x2e, 0x3b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0xaa, 0x02, 0x19, 0x4d,
	0x69, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mintsender_request_proto_rawDescOnce sync.Once
	file_mintsender_request_proto_rawDescData = file_mintsender_request_proto_rawDesc
)

func file_mintsender_request_proto_rawDescGZIP() []byte {
	file_mintsender_request_proto_rawDescOnce.Do(func() {
		file_mintsender_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_mintsender_request_proto_rawDescData)
	})
	return file_mintsender_request_proto_rawDescData
}

var file_mintsender_request_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mintsender_request_proto_goTypes = []interface{}{
	(*Send)(nil),         // 0: request.Send
	(*SendReply)(nil),    // 1: request.SendReply
	(*Approve)(nil),      // 2: request.Approve
	(*ApproveReply)(nil), // 3: request.ApproveReply
}
var file_mintsender_request_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mintsender_request_proto_init() }
func file_mintsender_request_proto_init() {
	if File_mintsender_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mintsender_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mintsender_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mintsender_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Approve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mintsender_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mintsender_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mintsender_request_proto_goTypes,
		DependencyIndexes: file_mintsender_request_proto_depIdxs,
		MessageInfos:      file_mintsender_request_proto_msgTypes,
	}.Build()
	File_mintsender_request_proto = out.File
	file_mintsender_request_proto_rawDesc = nil
	file_mintsender_request_proto_goTypes = nil
	file_mintsender_request_proto_depIdxs = nil
}
