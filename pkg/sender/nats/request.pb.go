// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request.proto

package sender

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Send is a request to the service to send token to the specified wallet
type Send struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	PublicKey            string   `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Amount               string   `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Send) Reset()         { *m = Send{} }
func (m *Send) String() string { return proto.CompactTextString(m) }
func (*Send) ProtoMessage()    {}
func (*Send) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_d853c7799507276f, []int{0}
}
func (m *Send) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Send.Unmarshal(m, b)
}
func (m *Send) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Send.Marshal(b, m, deterministic)
}
func (dst *Send) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Send.Merge(dst, src)
}
func (m *Send) XXX_Size() int {
	return xxx_messageInfo_Send.Size(m)
}
func (m *Send) XXX_DiscardUnknown() {
	xxx_messageInfo_Send.DiscardUnknown(m)
}

var xxx_messageInfo_Send proto.InternalMessageInfo

func (m *Send) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Send) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Send) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Send) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Send) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// SendReply is a reply for Send
type SendReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendReply) Reset()         { *m = SendReply{} }
func (m *SendReply) String() string { return proto.CompactTextString(m) }
func (*SendReply) ProtoMessage()    {}
func (*SendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_d853c7799507276f, []int{1}
}
func (m *SendReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendReply.Unmarshal(m, b)
}
func (m *SendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendReply.Marshal(b, m, deterministic)
}
func (dst *SendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendReply.Merge(dst, src)
}
func (m *SendReply) XXX_Size() int {
	return xxx_messageInfo_SendReply.Size(m)
}
func (m *SendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendReply proto.InternalMessageInfo

func (m *SendReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Approve is a request to the service to approve specified wallet
type Approve struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	PublicKey            string   `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Approve) Reset()         { *m = Approve{} }
func (m *Approve) String() string { return proto.CompactTextString(m) }
func (*Approve) ProtoMessage()    {}
func (*Approve) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_d853c7799507276f, []int{2}
}
func (m *Approve) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Approve.Unmarshal(m, b)
}
func (m *Approve) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Approve.Marshal(b, m, deterministic)
}
func (dst *Approve) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Approve.Merge(dst, src)
}
func (m *Approve) XXX_Size() int {
	return xxx_messageInfo_Approve.Size(m)
}
func (m *Approve) XXX_DiscardUnknown() {
	xxx_messageInfo_Approve.DiscardUnknown(m)
}

var xxx_messageInfo_Approve proto.InternalMessageInfo

func (m *Approve) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Approve) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Approve) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

// ApproveReply is a reply for Approve
type ApproveReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApproveReply) Reset()         { *m = ApproveReply{} }
func (m *ApproveReply) String() string { return proto.CompactTextString(m) }
func (*ApproveReply) ProtoMessage()    {}
func (*ApproveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_d853c7799507276f, []int{3}
}
func (m *ApproveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveReply.Unmarshal(m, b)
}
func (m *ApproveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveReply.Marshal(b, m, deterministic)
}
func (dst *ApproveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveReply.Merge(dst, src)
}
func (m *ApproveReply) XXX_Size() int {
	return xxx_messageInfo_ApproveReply.Size(m)
}
func (m *ApproveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveReply proto.InternalMessageInfo

func (m *ApproveReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ApproveReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*Send)(nil), "request.Send")
	proto.RegisterType((*SendReply)(nil), "request.SendReply")
	proto.RegisterType((*Approve)(nil), "request.Approve")
	proto.RegisterType((*ApproveReply)(nil), "request.ApproveReply")
}

func init() { proto.RegisterFile("request.proto", fileDescriptor_request_d853c7799507276f) }

var fileDescriptor_request_d853c7799507276f = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x31, 0x4b, 0x43, 0x31,
	0x10, 0x80, 0x69, 0x6c, 0xdf, 0xf3, 0x1d, 0xea, 0x10, 0x44, 0x22, 0x38, 0x48, 0x70, 0x70, 0xea,
	0xe2, 0x28, 0x08, 0xba, 0x8a, 0x83, 0xe9, 0xe6, 0x66, 0x93, 0x1b, 0x82, 0x35, 0x89, 0x97, 0xa4,
	0x50, 0xf0, 0x17, 0xf9, 0x2b, 0xa5, 0xf7, 0xf2, 0x70, 0x97, 0x4e, 0xe1, 0xfb, 0x02, 0x97, 0x8f,
	0x1c, 0x9c, 0x12, 0x7e, 0x55, 0xcc, 0x65, 0x99, 0x28, 0x96, 0x28, 0xfb, 0x86, 0xfa, 0x1b, 0xe6,
	0x2b, 0x0c, 0x4e, 0x2a, 0xe8, 0x33, 0xd2, 0xd6, 0x5b, 0x54, 0xb3, 0xeb, 0xd9, 0xed, 0x60, 0x26,
	0x94, 0x67, 0x20, 0xbc, 0x53, 0x82, 0xa5, 0xf0, 0x4e, 0x5e, 0xc1, 0x90, 0xea, 0x7a, 0xe3, 0xed,
	0x33, 0xee, 0xd4, 0x11, 0xeb, 0x3f, 0x21, 0xcf, 0x61, 0x51, 0xe2, 0x07, 0x06, 0x35, 0xe7, 0x9b,
	0x11, 0xe4, 0x05, 0x74, 0xef, 0x9f, 0xb1, 0x86, 0xa2, 0x16, 0xac, 0x1b, 0xe9, 0x7b, 0x18, 0xf6,
	0xaf, 0x1b, 0x4c, 0x9b, 0x1d, 0x27, 0x54, 0x6b, 0x31, 0x67, 0x4e, 0x38, 0x36, 0x13, 0xee, 0x87,
	0x22, 0x51, 0xa4, 0x56, 0x31, 0x82, 0x7e, 0x85, 0xfe, 0x31, 0x25, 0x8a, 0x5b, 0x3c, 0x54, 0xbd,
	0x7e, 0x80, 0x93, 0x36, 0xf2, 0x5f, 0x49, 0x4f, 0x37, 0x6f, 0x5d, 0xc6, 0xe0, 0x90, 0x7e, 0xc4,
	0xe5, 0x8b, 0x0f, 0x65, 0xc5, 0xb0, 0x6c, 0x87, 0x19, 0xff, 0x7c, 0xdd, 0xf1, 0x0e, 0xee, 0x7e,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x69, 0x18, 0x5f, 0x94, 0x01, 0x00, 0x00,
}
